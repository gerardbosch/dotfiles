[core]
  eol = lf
  autocrlf = input
  hooksPath = ~/.config/git/hooks

[user]
  email = gerard.bosch@gmail.com
  name = Gerard Bosch

[alias]
  co = checkout
  # checkout default branch
  codefault = !git checkout $(git branch --remotes | awk -F/ '/HEAD/ {print $NF}')
  br = branch
  ci = commit
  st = status
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  l  = ! git lg | head
  lg1 = log --pretty=oneline
  cl = clone --recurse-submodules
  in = init
  # cleanup already **fully** merged branches (git branch -d)
  brcleanup = !git branch --merged | egrep -v '(^\\*|^\\s*master$|^\\s*develop$|^\\s*dev$)' | xargs -n1 -r git branch -d
  submodule-pull = submodule update --init --remote
  submodule-update-rec = submodule update --init --recursive
  # Starts an interactive rebase of all the commits you haven't pushed yet. Handy for collapsing a bunch of work-in-progress snapshots into logical commits before pushing, without having to worry about accidentally squashing a commit someone else has already referred to.
  work-in-progress = rebase -i @{u}
  # Stop tracking further changes on the given file (file is already checked-in on VCS but ignore future changes)
  stop-tracking-changes = update-index --skip-worktree

[pager]
  log  = diffr | less
  show = diffr | less
  diff = diffr | less

[include]
  path = ~/.gitconfig-local

# Ending slash (/) makes it to work recursively like (/**)
[includeIf "gitdir:~/repos/"]
  path = ~/repos/.gitconfig
[includeIf "gitdir:~/personal-repos/"]
  path = ~/personal-repos/.gitconfig

[init]
  defaultBranch = main

[submodule]
  recurse = true

[push]
  autoSetupRemote = true

